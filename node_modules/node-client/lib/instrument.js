/**
 * Created by hetiu on 2017/6/13.
 */
const monitor = require('./monitor');
const Summary = require('./summary');
const Histogram = require('./histogram');

let metric = {
    summary: 'http_request_duration_seconds',
    histogram: 'http_request_buckets_seconds',
    labelNames: ['method', 'path', 'code'],
};

function middleware(request, response, done) {
    const duration = Summary(metric.summary, metric.labelNames, metric.percentiles).startTimer();
    const buckets = Histogram(metric.histogram, metric.labelNames, metric.buckets).startTimer();

    response.on('finish', () => {
        const method = request.method;
        const path = typeof request.path === 'string' ? request.path : request.path();
        const code = response.statusCode;

        duration({method, path, code});
        buckets({method, code});
    });

    return done();
}

function instrumentable(server) {
    return server && server.use;
}

function Instrument(server, percentiles = [0.5, 0.9, 0.99, 0.999], buckets = [0.05, 0.1, 0.5, 1, 2, 5]) {
    if (monitor.isEnable && instrumentable(server)) {
        metric.percentiles = percentiles;
        metric.buckets = buckets;
        server.use(middleware);
    }
}

module.exports = Instrument;

